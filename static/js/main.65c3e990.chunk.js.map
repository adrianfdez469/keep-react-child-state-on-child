{"version":3,"sources":["Solution1/child_B.js","Solution1/parent_A.js","Solution2/child_B.js","Solution2/context.js","Solution2/parent_A.js","Solution3/child_B.js","Solution3/parent_A.js","App.js","reportWebVitals.js","index.js"],"names":["ChildSolution1","props","id","alpha","rgb","changeRGBA","console","log","ref","useRef","handleChangeRed","sign","red","handleChangeGreen","green","handleChangeBlue","blue","useEffect","current","value","className","style","backgroundColor","type","margin","width","onClick","React","memo","ParentSolution1","useState","color1","setColor1","color2","setColor2","color3","setColor3","setAlpha","avgColor","setAvgColor","counterRef","handleChangeApha","toFixed","handleChangeColor1","useCallback","color","state","handleChangeColor2","handleChangeColor3","avgRed","avgGreen","avgBlue","ChildBSecondSolution","StateContext","createContext","Provider","children","ParentSolution2","useContext","ChildSolution3","forwardRef","initialRed","initialGreen","initialBlue","setRgbColor","_ref","handleChangeColor","useImperativeHandle","getRGB","ParentSolution3","ref1","ref2","ref3","handleChangeAlpha","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65c3e990.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport '../App.css';\r\n\r\n\r\nconst ChildSolution1 = (props) => {\r\n  const { id, alpha, rgb, changeRGBA } = props;\r\n  console.log(`SOLUTION 1: CHILD ${id} get's render `);\r\n  const ref = useRef();\r\n\r\n  const handleChangeRed = (sign) => {\r\n    if (sign === '+') changeRGBA('red', rgb.red + 10);\r\n    if (sign === '-') changeRGBA('red', rgb.red - 10);\r\n  }\r\n  const handleChangeGreen = (sign) => {\r\n    if (sign === '+') changeRGBA('green', rgb.green + 10);\r\n    if (sign === '-') changeRGBA('green', rgb.green - 10);\r\n  }\r\n  const handleChangeBlue = (sign) => {\r\n    if (sign === '+') changeRGBA('blue', rgb.blue + 10);\r\n    if (sign === '-') changeRGBA('blue', rgb.blue - 10);\r\n  }\r\n\r\n  useEffect(() => {\r\n    ref.current.value = +ref.current.value + 1;\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"childCmp\" style={{ backgroundColor: `rgba(${rgb.red},${rgb.green},${rgb.blue},${alpha})` }}>\r\n\r\n      <b>{id}</b>\r\n      <div className=\"\">\r\n        <b>Render times</b>\r\n        <input type=\"text\" ref={ref} style={{ margin: '0 5px', width: '50px' }} />\r\n      </div>\r\n\r\n      <div className=\"groupButtons\">\r\n        <button onClick={() => handleChangeRed('-')}>-</button>\r\n        <span className=\"span\"><b>{`R: ${rgb.red}`}</b></span>\r\n        <button onClick={() => handleChangeRed('+')}>+</button>\r\n      </div>\r\n\r\n      <div className=\"groupButtons\">\r\n        <button onClick={() => handleChangeGreen('-')}>-</button>\r\n        <span className=\"span\"><b>{`G: ${rgb.green}`}</b></span>\r\n        <button onClick={() => handleChangeGreen('+')}>+</button>\r\n      </div>\r\n\r\n      <div className=\"groupButtons\">\r\n        <button onClick={() => handleChangeBlue('-')}>-</button>\r\n        <span className=\"span\"><b>{`B: ${rgb.blue}`}</b></span>\r\n        <button onClick={() => handleChangeBlue('+')}>+</button>\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n\r\n};\r\n\r\nexport default React.memo(ChildSolution1);\r\n","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport ChildSolution1 from './child_B';\r\nimport '../App.css';\r\n\r\nconst ParentSolution1 = (props) => {\r\n  // Dont use useReducer for simplicity\r\n  const [color1, setColor1] = useState({ red: 0, green: 128, blue: 0 });\r\n  const [color2, setColor2] = useState({ red: 0, green: 0, blue: 128 });\r\n  const [color3, setColor3] = useState({ red: 128, green: 0, blue: 0 });\r\n  const [alpha, setAlpha] = useState(1);\r\n  const [avgColor, setAvgColor] = useState({ red: 250, green: 250, blue: 250 });\r\n  const counterRef = useRef();\r\n  console.log(`SOLUTION 1: PARENT get's render`);\r\n\r\n  const handleChangeApha = (sign) => {\r\n    if (sign === \"+\" && alpha < 1) setAlpha(+(alpha + 0.1).toFixed(1));\r\n    if (sign === \"-\" && alpha > 0.1) setAlpha(+(alpha - 0.1).toFixed(1));\r\n  }\r\n\r\n  const handleChangeColor1 = useCallback((color, value) => {\r\n    if (value >= 0 && value <= 255) {\r\n      setColor1((state) => ({\r\n        ...state,\r\n        [color]: value\r\n      }))\r\n    }\r\n  }, [])\r\n  const handleChangeColor2 = useCallback((color, value) => {\r\n    if (value >= 0 && value <= 255) {\r\n      setColor2((state) => ({\r\n        ...state,\r\n        [color]: value\r\n      }))\r\n    }\r\n  }, [])\r\n  const handleChangeColor3 = useCallback((color, value) => {\r\n    if (value >= 0 && value <= 255) {\r\n      setColor3((state) => ({\r\n        ...state,\r\n        [color]: value\r\n      }))\r\n    }\r\n  }, [])\r\n  const handleShowState = () => {\r\n    const avgRed = (color1.red + color2.red + color3.red) / 3;\r\n    const avgGreen = (color1.green + color2.green + color3.green) / 3;\r\n    const avgBlue = (color1.blue + color2.blue + color3.blue) / 3;\r\n    setAvgColor({ red: avgRed, green: avgGreen, blue: avgBlue });\r\n  }\r\n\r\n  useEffect(() => {\r\n    counterRef.current.value = +counterRef.current.value + 1;\r\n  });\r\n\r\n  return (\r\n\r\n    <div className=\"parentCmp\" style={{ backgroundColor: `rgb(${avgColor.red},${avgColor.green},${avgColor.blue})` }}>\r\n      <h3>Solution 1: Elevating state to the parent</h3>\r\n      <div>\r\n        <button onClick={() => handleChangeApha('-')}>-</button>\r\n        <span className=\"span\">{`ALPHA: ${alpha}`}</span>\r\n        <button onClick={() => handleChangeApha('+')}>+</button>\r\n      </div>\r\n\r\n      <div>\r\n        <button onClick={handleShowState}>AVERAGE CHILD COLOR</button>\r\n        <p>Average Red: <b>{`${avgColor.red.toFixed()}`}</b></p>\r\n        <p>Average Green: <b>{`${avgColor.green.toFixed()}`}</b></p>\r\n        <p>Average Blue: <b>{`${avgColor.blue.toFixed()}`}</b></p>\r\n      </div>\r\n\r\n      <div>\r\n        <h4>Parent Component Render Times</h4>\r\n        <input type=\"text\" ref={counterRef} />\r\n      </div>\r\n\r\n      <div className=\"childWrapper\">\r\n        <ChildSolution1 id=\"1\" alpha={alpha} rgb={color1} changeRGBA={handleChangeColor1} />\r\n        <ChildSolution1 id=\"2\" alpha={alpha} rgb={color2} changeRGBA={handleChangeColor2} />\r\n        <ChildSolution1 id=\"3\" alpha={alpha} rgb={color3} changeRGBA={handleChangeColor3} />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\nexport default React.memo(ParentSolution1);\r\n","import React, { useRef, useEffect } from 'react';\r\nimport '../App.css';\r\n\r\n\r\nconst ChildBSecondSolution = (props) => {\r\n  const { id, alpha, rgb, changeRGBA } = props;\r\n  console.log(`SOLUTION 2: CHILD ${id} get's render`);\r\n  const ref = useRef();\r\n\r\n  const handleChangeRed = (sign) => {\r\n    if (sign === '+') changeRGBA('red', rgb.red + 10);\r\n    if (sign === '-') changeRGBA('red', rgb.red - 10);\r\n  }\r\n  const handleChangeGreen = (sign) => {\r\n    if (sign === '+') changeRGBA('green', rgb.green + 10);\r\n    if (sign === '-') changeRGBA('green', rgb.green - 10);\r\n  }\r\n  const handleChangeBlue = (sign) => {\r\n    if (sign === '+') changeRGBA('blue', rgb.blue + 10);\r\n    if (sign === '-') changeRGBA('blue', rgb.blue - 10);\r\n  }\r\n\r\n  useEffect(() => {\r\n    ref.current.value = +ref.current.value + 1;\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"childCmp\" style={{ backgroundColor: `rgba(${rgb.red},${rgb.green},${rgb.blue},${alpha})` }}>\r\n\r\n      <b>{id}</b>\r\n      <div className=\"\">\r\n        <b>Rernder times</b>\r\n        <input type=\"text\" ref={ref} style={{ margin: '0 5px', width: '50px' }} />\r\n      </div>\r\n\r\n      <div className=\"groupButtons\">\r\n        <button onClick={() => handleChangeRed('-')}>-</button>\r\n        <span className=\"span\"><b>{`R: ${rgb.red}`}</b></span>\r\n        <button onClick={() => handleChangeRed('+')}>+</button>\r\n      </div>\r\n\r\n      <div className=\"groupButtons\">\r\n        <button onClick={() => handleChangeGreen('-')}>-</button>\r\n        <span className=\"span\"><b>{`G: ${rgb.green}`}</b></span>\r\n        <button onClick={() => handleChangeGreen('+')}>+</button>\r\n      </div>\r\n\r\n      <div className=\"groupButtons\">\r\n        <button onClick={() => handleChangeBlue('-')}>-</button>\r\n        <span className=\"span\"><b>{`B: ${rgb.blue}`}</b></span>\r\n        <button onClick={() => handleChangeBlue('+')}>+</button>\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n\r\n};\r\n\r\nexport default React.memo(ChildBSecondSolution);\r\n","import { useState, createContext, useCallback } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const Provider = (props) => {\r\n  // Dont use useReducer for simplicity\r\n  const [color1, setColor1] = useState({ red: 0, green: 128, blue: 0 });\r\n  const [color2, setColor2] = useState({ red: 0, green: 0, blue: 128 });\r\n  const [color3, setColor3] = useState({ red: 128, green: 0, blue: 0 });\r\n  const [alpha, setAlpha] = useState(1);\r\n  const [avgColor, setAvgColor] = useState({ red: 255, green: 255, blue: 255 });\r\n\r\n  const handleChangeApha = (sign) => {\r\n    if (sign === \"+\" && alpha < 1) setAlpha(+(alpha + 0.1).toFixed(1));\r\n    if (sign === \"-\" && alpha > 0.1) setAlpha(+(alpha - 0.1).toFixed(1))\r\n  }\r\n\r\n  const handleChangeColor1 = useCallback((color, value) => {\r\n    if (value >= 0 && value <= 255) {\r\n      setColor1((state) => ({\r\n        ...state,\r\n        [color]: value\r\n      }))\r\n    }\r\n  }, [])\r\n  const handleChangeColor2 = useCallback((color, value) => {\r\n    if (value >= 0 && value <= 255) {\r\n      setColor2((state) => ({\r\n        ...state,\r\n        [color]: value\r\n      }))\r\n    }\r\n  }, [])\r\n  const handleChangeColor3 = useCallback((color, value) => {\r\n    if (value >= 0 && value <= 255) {\r\n      setColor3((state) => ({\r\n        ...state,\r\n        [color]: value\r\n      }))\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <StateContext.Provider value={{\r\n      color1, color2, color3, alpha, avgColor, handleChangeApha, handleChangeColor1, handleChangeColor2, handleChangeColor3, setAvgColor\r\n    }}>\r\n      {props.children}\r\n    </StateContext.Provider>\r\n  );\r\n}\r\n\r\n","import React, { useRef, useEffect, useContext } from 'react';\r\nimport ChildSolution2 from './child_B';\r\nimport { StateContext } from './context';\r\nimport '../App.css';\r\n\r\nconst ParentSolution2 = (props) => {\r\n  console.log(`SECOND SOLUTION: PARENT get's render`);\r\n  const { color1, color2, color3, alpha, avgColor, handleChangeApha, handleChangeColor1, handleChangeColor2, handleChangeColor3, setAvgColor } = useContext(StateContext);\r\n  const counterRef = useRef();\r\n\r\n  const handleShowState = () => {\r\n    const avgRed = (color1.red + color2.red + color3.red) / 3;\r\n    const avgGreen = (color1.green + color2.green + color3.green) / 3;\r\n    const avgBlue = (color1.blue + color2.blue + color3.blue) / 3;\r\n    setAvgColor({ red: avgRed, green: avgGreen, blue: avgBlue });\r\n  }\r\n\r\n  useEffect(() => {\r\n    counterRef.current.value = +counterRef.current.value + 1;\r\n  });\r\n\r\n  return (\r\n\r\n    <div className=\"parentCmp\" style={{ backgroundColor: `rgb(${avgColor.red},${avgColor.green},${avgColor.blue})` }}>\r\n      <h3>Solution 2: Global State with Context-API</h3>\r\n      <div>\r\n        <button onClick={() => handleChangeApha('-')}>-</button>\r\n        <span className=\"span\">{`ALPHA: ${alpha}`}</span>\r\n        <button onClick={() => handleChangeApha('+')}>+</button>\r\n      </div>\r\n\r\n      <div>\r\n        <button onClick={handleShowState}>AVERAGE CHILD COLOR</button>\r\n        <p>Average Red: <b>{`${avgColor.red.toFixed()}`}</b></p>\r\n        <p>Average Green: <b>{`${avgColor.green.toFixed()}`}</b></p>\r\n        <p>Average Blue: <b>{`${avgColor.blue.toFixed()}`}</b></p>\r\n      </div>\r\n\r\n      <div>\r\n        <h4>Parent Component Render Times</h4>\r\n        <input type=\"text\" ref={counterRef} />\r\n      </div>\r\n\r\n      <div className=\"childWrapper\">\r\n        <ChildSolution2 id=\"1\" alpha={alpha} rgb={color1} changeRGBA={handleChangeColor1} />\r\n        <ChildSolution2 id=\"2\" alpha={alpha} rgb={color2} changeRGBA={handleChangeColor2} />\r\n        <ChildSolution2 id=\"3\" alpha={alpha} rgb={color3} changeRGBA={handleChangeColor3} />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\nexport default React.memo(ParentSolution2);\r\n","import React, { useRef, useEffect, useState, useCallback, forwardRef, useImperativeHandle } from 'react';\r\nimport '../App.css';\r\n\r\nconst ChildSolution3 = forwardRef(({ id, alpha, initialRed, initialGreen, initialBlue }, ref) => {\r\n\r\n  console.log(`SOLUTION 3: CHILD ${id} get's render`);\r\n  const [rgb, setRgbColor] = useState({ red: initialRed, green: initialGreen, blue: initialBlue });\r\n  const _ref = useRef();\r\n\r\n  const handleChangeColor = useCallback((color, sign) => {\r\n    if (rgb[color] >= 0 && rgb[color] <= 255) {\r\n      if (sign === '+') setRgbColor((state) => ({\r\n        ...state,\r\n        [color]: state[color] + 10\r\n      }));\r\n      if (sign === '-') setRgbColor((state) => ({\r\n        ...state,\r\n        [color]: state[color] - 10\r\n      }));\r\n    }\r\n  }, [rgb]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    getRGB: () => {\r\n      return rgb;\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    _ref.current.value = +_ref.current.value + 1;\r\n  });\r\n\r\n  return (\r\n    <div className=\"childCmp\" style={{ backgroundColor: `rgba(${rgb.red},${rgb.green},${rgb.blue},${alpha})` }}>\r\n\r\n      <b>{id}</b>\r\n      <div className=\"\">\r\n        <b>Render times</b>\r\n        <input type=\"text\" ref={_ref} style={{ margin: '0 5px', width: '50px' }} />\r\n      </div>\r\n\r\n      <div className=\"groupButtons\">\r\n        <button onClick={() => handleChangeColor('red', '-')}>-</button>\r\n        <span className=\"span\"><b>{`R: ${rgb.red}`}</b></span>\r\n        <button onClick={() => handleChangeColor('red', '+')}>+</button>\r\n      </div>\r\n\r\n      <div className=\"groupButtons\">\r\n        <button onClick={() => handleChangeColor('green', '-')}>-</button>\r\n        <span className=\"span\"><b>{`G: ${rgb.green}`}</b></span>\r\n        <button onClick={() => handleChangeColor('green', '+')}>+</button>\r\n      </div>\r\n\r\n      <div className=\"groupButtons\">\r\n        <button onClick={() => handleChangeColor('blue', '-')}>-</button>\r\n        <span className=\"span\"><b>{`B: ${rgb.blue}`}</b></span>\r\n        <button onClick={() => handleChangeColor('blue', '+')}>+</button>\r\n      </div>\r\n    </div >\r\n  );\r\n});\r\n\r\nexport default React.memo(ChildSolution3);\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport ChildSolution3 from './child_B';\r\nimport '../App.css';\r\n\r\nconst ParentSolution3 = () => {\r\n  // Dont use useReducer for simplicity\r\n  console.log(`SOLUTION 3: PARENT get's render`);\r\n\r\n  const [alpha, setAlpha] = useState(1);\r\n  const [avgColor, setAvgColor] = useState({ red: 250, green: 250, blue: 250 });\r\n  const counterRef = useRef();\r\n\r\n  const ref1 = useRef();\r\n  const ref2 = useRef();\r\n  const ref3 = useRef();\r\n\r\n  const handleShowState = () => {\r\n    const color1 = ref1.current.getRGB();\r\n    const color2 = ref2.current.getRGB();\r\n    const color3 = ref3.current.getRGB();\r\n\r\n    const avgRed = (color1.red + color2.red + color3.red) / 3;\r\n    const avgGreen = (color1.green + color2.green + color3.green) / 3;\r\n    const avgBlue = (color1.blue + color2.blue + color3.blue) / 3;\r\n    setAvgColor({ red: avgRed, green: avgGreen, blue: avgBlue });\r\n  }\r\n\r\n  const handleChangeAlpha = (sign) => {\r\n    if (sign === \"+\" && alpha < 1) setAlpha(+(alpha + 0.1).toFixed(1));\r\n    if (sign === \"-\" && alpha > 0.1) setAlpha(+(alpha - 0.1).toFixed(1))\r\n  }\r\n\r\n  useEffect(() => {\r\n    counterRef.current.value = +counterRef.current.value + 1;\r\n  });\r\n\r\n  return (\r\n\r\n    <div className=\"parentCmp\" style={{ backgroundColor: `rgb(${avgColor.red},${avgColor.green},${avgColor.blue})` }}>\r\n      <h3>Solution 3: Managing state on child</h3>\r\n      <div>\r\n        <button onClick={() => handleChangeAlpha('-')}>-</button>\r\n        <span className=\"span\">{`ALPHA: ${alpha}`}</span>\r\n        <button onClick={() => handleChangeAlpha('+')}>+</button>\r\n      </div>\r\n\r\n      <div>\r\n        <button onClick={handleShowState}>AVERAGE CHILD COLOR</button>\r\n        <p>Average Red: <b>{`${avgColor.red.toFixed()}`}</b></p>\r\n        <p>Average Green: <b>{`${avgColor.green.toFixed()}`}</b></p>\r\n        <p>Average Blue: <b>{`${avgColor.blue.toFixed()}`}</b></p>\r\n      </div>\r\n\r\n      <div>\r\n        <h4>Parent Component Render Times</h4>\r\n        <input type=\"text\" ref={counterRef} />\r\n      </div>\r\n\r\n      <div className=\"childWrapper\">\r\n        <ChildSolution3 id={1} ref={ref1} alpha={alpha} initialBlue={0} initialGreen={128} initialRed={0} />\r\n        <ChildSolution3 id={2} ref={ref2} alpha={alpha} initialBlue={0} initialGreen={0} initialRed={128} />\r\n        <ChildSolution3 id={3} ref={ref3} alpha={alpha} initialBlue={128} initialGreen={0} initialRed={0} />\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\nexport default ParentSolution3;\r\n","import Parent1 from './Solution1/parent_A';\r\n\r\nimport Parent2 from './Solution2/parent_A';\r\nimport { Provider } from './Solution2/context';\r\n\r\nimport Parent3 from './Solution3/parent_A';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Parent1 />\r\n\r\n      <Provider>\r\n        <Parent2 />\r\n      </Provider>\r\n\r\n      <Parent3 />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}